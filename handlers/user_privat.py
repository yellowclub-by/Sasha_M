from aiogram import types, Router, F
from aiogram.filters import CommandStart, Command
from keyboards import reply

user_router = Router()


@user_router.message(CommandStart())
async def start(message: types.Message):
    text = '''<strong>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –∫–ª—é—á–µ–π –æ—Ç –∏–≥—Ä!</strong>üëã \n
–£ –Ω–∞—Å –≤—ã –Ω–∞–π–¥–µ—Ç–µ —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∏ –Ω–æ–≤–µ–π—à–∏–µ –∏–≥—Ä—ã –ø–æ –≤—ã–≥–æ–¥–Ω—ã–º —Ü–µ–Ω–∞–º.ü§ë –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –±—ã—Å—Ç—Ä—É—é –¥–æ—Å—Ç–∞–≤–∫—É –∫–ª—é—á–µ–π –∏ –æ—Ç–ª–∏—á–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ.üòç
–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –º–∏—Ä—ã –∏–≥—Ä —É–∂–µ —Å–µ–≥–æ–¥–Ω—è!üí´ –û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å —Å –Ω–∞–º–∏ –∏ –±—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–æ–≤–∏–Ω–æ–∫ –∏ –∞–∫—Ü–∏–π.üòä
\n <b>–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å!</b>‚ù§Ô∏è'''
    await message.answer(text, reply_markup=reply.start_kb)


@user_router.message(F.text.lower() == "–∫–∞—Ç–∞–ª–æ–≥üòé")
@user_router.message(Command('catalog'))
async def catalog(message: types.Message):
    await message.answer('–í–æ—Ç –Ω–∞—à –∫–∞—Ç–∞–ª–æ–≥:', reply_markup=reply.catalog_kb)


@user_router.message(F.text.lower() == "–æ –Ω–∞—Åü¶É")
@user_router.message(Command('about'))
async def about(message: types.Message):
    await message.answer("–û –Ω–∞—Å:")


@user_router.message(F.text.lower() == "–∫–æ–Ω—Ç–∞–∫—Ç—ãüîî")
@user_router.message(Command('contacts'))
async def contacts(message: types.Message):
    await message.answer("–ö–æ–Ω—Ç–∞–∫—Ç—ã:")


@user_router.message(F.text.lower() == "—Ñ–∏–ª–∏–∞–ª—ãüéê")
@user_router.message(Command('addresses'))
async def addresses(message: types.Message):
    await message.answer("–§–∏–ª–∏–∞–ª—ã:")


@user_router.message(F.text.lower() == "–Ω–∞–∑–∞–¥üîô")
async def back(message: types.Message):
    await message.answer('<b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>', reply_markup=reply.start_kb)


# @user_router.message(F.text)
# @user_router.message(F.photo)
# @user_router.message(F.text.lower() == "–¥–æ—Å—Ç–∞–≤–∫–∞")
# @user_router.message(F.text.lower().contains('–¥–æ—Å—Ç–∞–≤–∫'))
# @user_router.message(F.text.lower().startswith('–∫–∞–∫'))
# @user_router.message(F.text.endswith("?"))
# @user_router.message(F.text.lower().startswith("–∫–∞–∫"), F.text.endswith('?'))
# @user_router.message((F.text.lower().contains("—Å—Ç–æ–∏–º–æ—Å—Ç")) | (F.text.lower().contains("—Ü–µ–Ω")))
# async def echo(message: types.Message):
#     await message.answer("–°—Ä–∞–±–æ—Ç–∞–ª –º–∞–≥–∏—á–µ—Å–∫–∏–π —Ñ–∏–ª—å—Ç—Ä")
