from aiogram import types, Router, F
from aiogram.filters import CommandStart, Command
from keyboards import reply, inline

user_router = Router()


@user_router.message(CommandStart())
async def start(message: types.Message):
    text = '''<strong>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –∫–ª—é—á–µ–π –æ—Ç –∏–≥—Ä!</strong>üëã \n
–£ –Ω–∞—Å –≤—ã –Ω–∞–π–¥–µ—Ç–µ —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∏ –Ω–æ–≤–µ–π—à–∏–µ –∏–≥—Ä—ã –ø–æ –≤—ã–≥–æ–¥–Ω—ã–º —Ü–µ–Ω–∞–º.ü§ë –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –±—ã—Å—Ç—Ä—É—é –¥–æ—Å—Ç–∞–≤–∫—É –∫–ª—é—á–µ–π –∏ –æ—Ç–ª–∏—á–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ.üòç
–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –º–∏—Ä—ã –∏–≥—Ä —É–∂–µ —Å–µ–≥–æ–¥–Ω—è!üí´ –û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å —Å –Ω–∞–º–∏ –∏ –±—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–æ–≤–∏–Ω–æ–∫ –∏ –∞–∫—Ü–∏–π.üòä
\n <b>–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å!</b>‚ù§Ô∏è'''
    await message.answer(text, reply_markup=reply.start_kb)


@user_router.message(F.text.lower() == "–∫–∞—Ç–∞–ª–æ–≥üòé")
@user_router.message(Command('catalog'))
async def catalog(message: types.Message):
    await message.answer('–í–æ—Ç –Ω–∞—à –∫–∞—Ç–∞–ª–æ–≥:', reply_markup=reply.catalog_kb)


@user_router.message(F.text.lower() == "–æ –Ω–∞—Åü¶É")
@user_router.message(Command('about'))
async def about(message: types.Message):
    text = '''<strong>Keys Store - —ç—Ç–æ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã—Ö –∫–ª—é—á–µ–π –æ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö –∏–≥—Ä.ü§©</strong>\n
–ë–æ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —à–∏—Ä–æ–∫–∏–π –≤—ã–±–æ—Ä –∏–≥—Ä –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—ÖüéÆ. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –∏—Å–∫–∞—Ç—å, –≤—ã–±–∏—Ä–∞—Ç—å –∏ –ø–æ–∫—É–ø–∞—Ç—å –∏–≥—Ä–æ–≤—ã–µ –∫–ª—é—á–∏ –≤–Ω—É—Ç—Ä–∏ –±–æ—Ç–∞.ü§Ø\n
<i>–û–ø–ª–∞—Ç–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏, –≤–∫–ª—é—á–∞—è –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã –∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ãüí≥.</i> <b>–ë–æ—Ç —Ç–∞–∫–∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π 24/7.</b>‚è≤Ô∏è'''
    await message.answer(text)


@user_router.message(F.text.lower() == "–∫–æ–Ω—Ç–∞–∫—Ç—ãüîî")
@user_router.message(Command('contacts'))
async def contacts(message: types.Message):
    text = '<strong>–î–ª—è —Å–≤—è–∑–∏ —Å —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–æ–º Keys Store –ø–æ –ø—Ä–æ–¥–∞–∂–µ –∫–ª—é—á–µ–π –æ—Ç –∏–≥—Ä, –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–æ–º: @NE_ABABUS.</strong>üòé'
    await message.answer(text)


@user_router.message(F.text.lower() == "—Ñ–∏–ª–∏–∞–ª—ãüéê")
@user_router.message(Command('addresses'))
async def addresses(message: types.Message):
    await message.answer("–û–û–ù –°–∞–≤–µ–ª–∏–π –û–≥—É—Ä—á–∏–∫–æ–≤", reply_markup=inline.addresses_kb())


@user_router.callback_query(F.data.startswith('address'))
async def addresses_type(callback: types.CallbackQuery):
    quare = callback.data.split('_')[1]
    if quare == '1':
        await callback.message.answer("Rue des √âtats-Unis")
    elif quare == '2':
        await callback.message.answer("Weiermattweg 32")
    elif quare == '3':
        await callback.message.answer("Rosenweg 27")
    elif quare == '4':
        await callback.message.answer("C. de Mar√≠a Nistal, 2-4")
    await callback.answer()


@user_router.message(F.text.lower() == "–Ω–∞–∑–∞–¥üîô")
async def back(message: types.Message):
    await message.answer('<b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>', reply_markup=reply.start_kb)

# @user_router.message(F.text)
# @user_router.message(F.photo)
# @user_router.message(F.text.lower() == "–¥–æ—Å—Ç–∞–≤–∫–∞")
# @user_router.message(F.text.lower().contains('–¥–æ—Å—Ç–∞–≤–∫'))
# @user_router.message(F.text.lower().startswith('–∫–∞–∫'))
# @user_router.message(F.text.endswith("?"))
# @user_router.message(F.text.lower().startswith("–∫–∞–∫"), F.text.endswith('?'))
# @user_router.message((F.text.lower().contains("—Å—Ç–æ–∏–º–æ—Å—Ç")) | (F.text.lower().contains("—Ü–µ–Ω")))
# async def echo(message: types.Message):
#     await message.answer("–°—Ä–∞–±–æ—Ç–∞–ª –º–∞–≥–∏—á–µ—Å–∫–∏–π —Ñ–∏–ª—å—Ç—Ä")
